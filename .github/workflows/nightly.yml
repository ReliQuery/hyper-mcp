name: Nightly Release

on:
  schedule:
    - cron: '0 17 * * *' # midnight GMT+7
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io

jobs:
  build-oci-images:
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: amd64
          - os: ubuntu-24.04-arm
            arch: arm64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write
      id-token: write # needed for keyless signing
    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Install cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push hyper-mcp
        run: |
          echo "Building hyper-mcp image"
          hyper_mcp_image="${{ env.REGISTRY }}/${{ github.repository_owner }}/hyper-mcp:nightly-${{ matrix.arch }}"
          docker build -t $hyper_mcp_image .
          docker push $hyper_mcp_image
          cosign sign --yes $hyper_mcp_image

          for plugin in examples/plugins/*/; do
            plugin_name=$(basename $plugin)
            echo "Building plugin: $plugin_name"
            
            image_name="${{ env.REGISTRY }}/${{ github.repository_owner }}/${plugin_name}-plugin:nightly-${{ matrix.arch }}"
            docker build -t $image_name $plugin
            docker push $image_name
            
            cosign sign --yes $image_name
          done

  # do this before we build nightly binaries
  prepare-nightly-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set nightly tag to latest main
        run: |
          git fetch origin main
          git tag -f nightly origin/main
          git push -f origin nightly

      - name: Delete existing nightly release
        run: gh release delete nightly --yes || true

  build-nightly-binaries:
    needs: prepare-nightly-release
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-24.04-arm
            arch: aarch64
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - run: cargo install cargo-auditable

      - name: Install compilation targets
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo auditable build --target ${{ matrix.target }} --release

      # TODO: figure out how to do cross build
      - name: Create archives and checksums
        run: |
          # Create directories for archives
          mkdir -p dist/${{ matrix.target }}
          
          cp target/${{ matrix.target }}/release/hyper-mcp dist/${{ matrix.target }}/
          cd dist/${{ matrix.target }} && tar -czf ../hyper-mcp-${{ matrix.target }}.tar.gz hyper-mcp
          cd ..
          
          {
            echo "hyper-mcp-${{ matrix.target }}.tar.gz:"
            if command -v sha256sum >/dev/null 2>&1; then
              sha256sum hyper-mcp-${{ matrix.target }}.tar.gz
            else
              shasum -a 256 hyper-mcp-${{ matrix.target }}.tar.gz
            fi
          } > checksums.txt

      - name: Create new nightly release
        id: create_release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          tag_name: nightly
          name: Nightly build
          draft: false
          prerelease: true
          files: |
            dist/hyper-mcp-${{ matrix.target }}.tar.gz
            dist/checksums.txt
          body: |
            Nightly build from `main` branch.
            
            This release includes:
            - hyper-mcp binaries for Linux & macOS
            - hyper-mcp container image: `ghcr.io/${{ github.repository_owner }}/hyper-mcp:nightly`
            - Plugin images: `ghcr.io/${{ github.repository_owner }}/<plugin-name>-plugin:nightly`
            
            All container images are signed with Cosign. Verify with:
            ```bash
            cosign verify ghcr.io/${{ github.repository_owner }}/hyper-mcp:nightly
            cosign verify ghcr.io/${{ github.repository_owner }}/<plugin-name>-plugin:nightly
            ```

  create-multiarch-manifests:
    needs: build-oci-images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download plugin list
        uses: actions/download-artifact@v4
        with:
          name: plugins

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch nightly tags
        run: |
          # Main image
          docker buildx imagetools create \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/hyper-mcp:nightly \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/hyper-mcp:nightly-amd64 \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/hyper-mcp:nightly-arm64

          # Plugin images
          for plugin in examples/plugins/*/; do
            plugin_name=$(basename $plugin)
            docker buildx imagetools create \
              -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${plugin_name}-plugin:nightly \
              ${{ env.REGISTRY }}/${{ github.repository_owner }}/${plugin_name}-plugin:nightly-amd64 \
              ${{ env.REGISTRY }}/${{ github.repository_owner }}/${plugin_name}-plugin:nightly-arm64
          done
